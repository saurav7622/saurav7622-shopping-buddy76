{"id":"../../node_modules/unbzip2-stream/index.js","dependencies":[{"name":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\package.json","includedInParent":true,"mtime":1624360771024},{"name":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\package.json","includedInParent":true,"mtime":1549638602000},{"name":"through","loc":{"line":1,"column":22},"parent":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\index.js","resolved":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\through\\index.js"},{"name":"./lib/bzip2","loc":{"line":2,"column":18},"parent":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\index.js","resolved":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\lib\\bzip2.js"},{"name":"./lib/bit_iterator","loc":{"line":3,"column":26},"parent":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\index.js","resolved":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\lib\\bit_iterator.js"},{"name":"buffer","parent":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\unbzip2-stream\\index.js","resolved":"C:\\Users\\91834\\Desktop\\ShoppingBuddy\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar through = require('through');\nvar bz2 = require('./lib/bzip2');\nvar bitIterator = require('./lib/bit_iterator');\n\nmodule.exports = unbzip2Stream;\n\nfunction unbzip2Stream() {\n    var bufferQueue = [];\n    var hasBytes = 0;\n    var blockSize = 0;\n    var broken = false;\n    var done = false;\n    var bitReader = null;\n    var streamCRC = null;\n\n    function decompressBlock(push){\n        if(!blockSize){\n            blockSize = bz2.header(bitReader);\n            //console.error(\"got header of\", blockSize);\n            return true;\n        }else{\n            var bufsize = 100000 * blockSize;\n            var buf = new Int32Array(bufsize);\n            \n            var chunk = [];\n            var f = function(b) {\n                chunk.push(b);\n            };\n\n            streamCRC = bz2.decompress(bitReader, f, buf, bufsize, streamCRC);\n            if (streamCRC === null) {\n                // reset for next bzip2 header\n                blockSize = 0;\n                return false;\n            }else{\n                //console.error('decompressed', chunk.length,'bytes');\n                push(Buffer.from(chunk));\n                return true;\n            }\n        }\n    }\n\n    var outlength = 0;\n    function decompressAndQueue(stream) {\n        if (broken) return;\n        try {\n            return decompressBlock(function(d) {\n                stream.queue(d);\n                if (d !== null) {\n                    //console.error('write at', outlength.toString(16));\n                    outlength += d.length;\n                } else {\n                    //console.error('written EOS');\n                }\n            });\n        } catch(e) {\n            //console.error(e);\n            stream.emit('error', e);\n            broken = true;\n            return false;\n        }\n    }\n\n    return through(\n        function write(data) {\n            //console.error('received', data.length,'bytes in', typeof data);\n            bufferQueue.push(data);\n            hasBytes += data.length;\n            if (bitReader === null) {\n                bitReader = bitIterator(function() {\n                    return bufferQueue.shift();\n                });\n            }\n            while (!broken && hasBytes - bitReader.bytesRead + 1 >= ((25000 + 100000 * blockSize) || 4)){\n                //console.error('decompressing with', hasBytes - bitReader.bytesRead + 1, 'bytes in buffer');\n                decompressAndQueue(this);\n            }\n        },\n        function end(x) {\n            //console.error(x,'last compressing with', hasBytes, 'bytes in buffer');\n            while (!broken && hasBytes > bitReader.bytesRead){\n                decompressAndQueue(this);\n            }\n            if (!broken) {\n                if (streamCRC !== null)\n                    stream.emit('error', new Error(\"input stream ended prematurely\"));\n                this.queue(null);\n            }\n        }\n    );\n}\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/unbzip2-stream/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}}],"sources":{"../../node_modules/unbzip2-stream/index.js":"var through = require('through');\nvar bz2 = require('./lib/bzip2');\nvar bitIterator = require('./lib/bit_iterator');\n\nmodule.exports = unbzip2Stream;\n\nfunction unbzip2Stream() {\n    var bufferQueue = [];\n    var hasBytes = 0;\n    var blockSize = 0;\n    var broken = false;\n    var done = false;\n    var bitReader = null;\n    var streamCRC = null;\n\n    function decompressBlock(push){\n        if(!blockSize){\n            blockSize = bz2.header(bitReader);\n            //console.error(\"got header of\", blockSize);\n            return true;\n        }else{\n            var bufsize = 100000 * blockSize;\n            var buf = new Int32Array(bufsize);\n            \n            var chunk = [];\n            var f = function(b) {\n                chunk.push(b);\n            };\n\n            streamCRC = bz2.decompress(bitReader, f, buf, bufsize, streamCRC);\n            if (streamCRC === null) {\n                // reset for next bzip2 header\n                blockSize = 0;\n                return false;\n            }else{\n                //console.error('decompressed', chunk.length,'bytes');\n                push(Buffer.from(chunk));\n                return true;\n            }\n        }\n    }\n\n    var outlength = 0;\n    function decompressAndQueue(stream) {\n        if (broken) return;\n        try {\n            return decompressBlock(function(d) {\n                stream.queue(d);\n                if (d !== null) {\n                    //console.error('write at', outlength.toString(16));\n                    outlength += d.length;\n                } else {\n                    //console.error('written EOS');\n                }\n            });\n        } catch(e) {\n            //console.error(e);\n            stream.emit('error', e);\n            broken = true;\n            return false;\n        }\n    }\n\n    return through(\n        function write(data) {\n            //console.error('received', data.length,'bytes in', typeof data);\n            bufferQueue.push(data);\n            hasBytes += data.length;\n            if (bitReader === null) {\n                bitReader = bitIterator(function() {\n                    return bufferQueue.shift();\n                });\n            }\n            while (!broken && hasBytes - bitReader.bytesRead + 1 >= ((25000 + 100000 * blockSize) || 4)){\n                //console.error('decompressing with', hasBytes - bitReader.bytesRead + 1, 'bytes in buffer');\n                decompressAndQueue(this);\n            }\n        },\n        function end(x) {\n            //console.error(x,'last compressing with', hasBytes, 'bytes in buffer');\n            while (!broken && hasBytes > bitReader.bytesRead){\n                decompressAndQueue(this);\n            }\n            if (!broken) {\n                if (streamCRC !== null)\n                    stream.emit('error', new Error(\"input stream ended prematurely\"));\n                this.queue(null);\n            }\n        }\n    );\n}\n\n"},"lineCount":94}},"error":null,"hash":"d04a8d7140c9435b415602ce19cbd046","cacheData":{"env":{}}}